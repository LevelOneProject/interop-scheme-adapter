#%RAML 1.0
title: RAML for Scheme Adapter
version: v1
baseUri: https://localhost:8088/scheme/adapter/{version}

types:

  QuoteRequest:
    type: object
    properties:
      paymentId: string
      payer: Person
      payee: Person
      amountType:
        type:
          enum: [SEND, RECEIVE]
      amount: Amount
      fees?: Amount
      transferType: string

  QuoteResponse:
    type: object
    properties:
      paymentId: string
      receiveAmount: Amount
      payeeFee: Amount
      payeeCommission: Amount
      ipr?: string
      sourceExpiryDuration?: integer

  PaymentRequest:
    type: object
    properties:
      ipr: string
      sourceAmount:
        type: number
        format: float
      sourceAccount: string
      connectorAccount: string
      sourceExpiryDuration: integer

  PaymentResponse:
    type: object
    properties:
      paymentId: string
      connectorAccount: string
      status:
        type:
          enum: [executed, rejected, expired]
      rejectionMessage: string
      fulfillment: string

  Person:
    type: object
    properties:
      identifier: string
      identifierType: string
      url?: string
      account?: string
      
  Amount: 
    type: object
    properties:
      amount: number
      currency: string
  
  
  HealthStatus:
    type: object
    properties: 
      status:
        type: string
        required: true
       
  ILPAddress:
    type: object
    properties: 
      ilpAddress:
        type: string
        required: true
        
  NotificationRequest:
      type: object
      properties:
        ipr: string
        paymentId: string
        destinationAccount: string
        status:
          type:
            enum: [prepared, executed]
        fulfillment?: string
        
  QueryResponse:
    type: object
    properties:
      type:
        enum: [ payee, invoice ]
      account:
        type: string
        pattern: ^((http(s?))\:\/\/)?((([a-zA-Z0-9_\-]{2,}\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)( ?(\.?\d)\.)){4}))(:[a-zA-Z0-9]+)?(\/[a-zA-Z0-9\-\._\?\,\'\/\\\+&amp;%\$#\=~]*)?$
      currencyCode: string
      currencySymbol: string
      name?: string
      imageUrl?:
        type: string
        pattern: ^((http(s?))\:\/\/)?((([a-zA-Z0-9_\-]{2,}\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)( ?(\.?\d)\.)){4}))(:[a-zA-Z0-9]+)?(\/[a-zA-Z0-9\-\._\?\,\'\/\\\+&amp;%\$#\=~]*)?$
      amount?:
        type: string
        pattern: ^[-+]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?$
      status?:
        enum: [ paid, unpaid, cancelled ]
      invoiceInfo?: string
      
  QueryErrorResponse:
    type: object
    properties:
      id: string
      message: string
      
  GetFetchResponse:
    type: object
    properties:
      name?: string
      account: string
      currencySymbol: string
      currencyCode: string
      
  GetPayeeResponse:
    type: GetFetchResponse
    properties:
      type:
        enum: [ payee, invoice ]
      paymentsUrl: string
      imageUrl?:
        type: string
        pattern: ^((http(s?))\:\/\/)?((([a-zA-Z0-9_\-]{2,}\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)( ?(\.?\d)\.)){4}))(:[a-zA-Z0-9]+)?(\/[a-zA-Z0-9\-\._\?\,\'\/\\\+&amp;%\$#\=~]*)?$ 
  
  FetchErrorResponse:
    type: object
    properties:
      id: string
      message: string

/query:
    displayName: Query ( GET <receiver> )
    get:
        description: The sender queries the receiver endpoint to get information about the type of payment that can be made to this receiver
        queryParameters:
          receiver: string
        responses:
          200:
            body:
              application/json:
                type: QueryResponse
          404:
            body:
              application/json:
                type: QueryErrorResponse
                example:
                    id: "InvalidReceiverIdError"
                    message: "Invalid receiver ID"
                    
                    
/receivers:
  displayName: Fetching Account Info ( GET <receiver> ). There are 2 types of receivers - payee and invoice.
  /{ID}:
    get:
      description: Payee
      responses:
        200:
          body:
            application/json:
              type: GetPayeeResponse
              example:
                  type: "payee"
                  name: "Bob Dylan"
                  account: "https://ilpdemo.red.bob:8014"
                  currencyCode: "USD"
                  currencySymbol: "$"
                  imageUrl: "https://red.ilpdemo.org/api/receivers/bob/profile_pic.jpg"
                  paymentsUrl: "http://backend.example/receivers/bob/:id"
        404:
          body:
            application/json:
              type: FetchErrorResponse
              example:
                  id: "InvalidReceiverIdError"
                  message: "Invalid receiver ID"

/quotes:
  displayName: /v1/quotes/
  post:
      description: Submit a request for a quote.
      body:
        application/json:
         type: QuoteRequest
         
      responses:
        201:
          body:
            application/json:
             type: QuoteResponse
             #example: !include payments-response-sample.json
               
/health:
  displayName: HealthCheck resource
  description: This resource is included to provide a simple response to indicate that the API is up and running.
  get:
    responses: 
      200:
        body: 
          application/json: 
            type: HealthStatus
            example: |
              { 
                "status" : "ok" 
              }

/ilpAddress:
  displayName: ILP Address
  description: This resource indicates ILP payment request packet
  get:
    queryParameters:
          account: string
    responses: 
      200:
        body: 
          application/json: 
            type: ILPAddress
            example: |
              { 
                "ilpAddress" : "ok" 
              }

/payments:
  displayName: Payments
  description: Endpoint to submit the payments
  post:
      body:
        application/json:
         type: PaymentRequest
         #example: !include invoice-request-sample.json
      responses:
        201:
          description: "ok"
          body:
              application/json:
               type: PaymentResponse
               
/notifications:
  displayName: Notifications
  description: ILP Service calls this endpoint to validate the prepare before proceesding further on fulfillment
  post:
      body:
        application/json:
         type: NotificationRequest
      responses:
        200:
          description: "Success"
          

