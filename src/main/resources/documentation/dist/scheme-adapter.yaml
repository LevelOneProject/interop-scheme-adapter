---
swagger: "2.0"
info:
  version: "v1"
  title: "Interop Scheme Adapter"
host: "localhost:8088"
basePath: "/scheme/adapter/v1"
schemes:
- "https"
paths:
  /quotes:
    post:
      description: "Submit a request for a quote."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/QuoteRequest"
      responses:
        201:
          description: "Status 201"
          schema:
            $ref: "#/definitions/QuoteResponse"
  /health:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/HealthStatus"
          examples:
            application/json: "{ \n  \"status\" : \"ok\" \n}\n"
  /ilpAddress:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "account"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/ILPAddress"
          examples:
            application/json: "{ \n  \"ilpAddress\" : \"ok\" \n}\n"
  /payments:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentRequest"
      responses:
        201:
          description: "ok"
          schema:
            $ref: "#/definitions/PaymentResponse"
  /notifications:
    post:
      consumes:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/NotificationRequest"
      responses:
        200:
          description: "Success"
  /query:
    get:
      description: "The sender queries the receiver endpoint to get information about\
        \ the type of payment that can be made to this receiver"
      produces:
      - "application/json"
      parameters:
      - name: "receiver"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/QueryResponse"
        404:
          description: "Status 404"
          schema:
            $ref: "#/definitions/QueryErrorResponse"
          examples:
            application/json:
              id: "InvalidReceiverIdError"
              message: "Invalid receiver ID"
  /receivers/{ID}:
    get:
      summary: "Get payee/invoice details"
      operationId: "payee ID or invoice ID"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GetPayeeResponse"
        404:
          description: "Payee/Invoice Not found"
          schema:
            $ref: "#/definitions/FetchErrorResponse"
    parameters:
    - name: "ID"
      in: "path"
      required: true
      type: "string"
definitions:
  QuoteRequest:
    type: "object"
    required:
    - "amount"
    - "amountType"
    - "payee"
    - "payer"
    - "paymentId"
    - "transferType"
    properties:
      paymentId:
        type: "string"
      payer:
        $ref: "#/definitions/Person"
      payee:
        $ref: "#/definitions/Person"
      amountType:
        type: "string"
        enum:
        - "SEND"
        - "RECEIVE"
      amount:
        $ref: "#/definitions/Amount"
      fees:
        $ref: "#/definitions/Amount"
      transferType:
        $ref: "#/definitions/TransferType"
  QuoteResponse:
    type: "object"
    required:
    - "payeeCommission"
    - "payeeFee"
    - "paymentId"
    - "receiveAmount"
    properties:
      paymentId:
        type: "string"
      receiveAmount:
        $ref: "#/definitions/Amount"
      payeeFee:
        $ref: "#/definitions/Amount"
      payeeCommission:
        $ref: "#/definitions/Amount"
      ipr:
        type: "string"
  PaymentRequest:
    type: "object"
    required:
    - "connectorAccount"
    - "ipr"
    - "sourceAccount"
    - "sourceAmount"
    - "sourceExpiryDuration"
    properties:
      ipr:
        type: "string"
      sourceAmount:
        type: "number"
        format: "float"
      sourceAccount:
        type: "string"
      connectorAccount:
        type: "string"
      sourceExpiryDuration:
        type: "integer"
  PaymentResponse:
    type: "object"
    required:
    - "connectorAccount"
    - "fulfillment"
    - "paymentId"
    - "rejectionMessage"
    - "status"
    properties:
      paymentId:
        type: "string"
      connectorAccount:
        type: "string"
      status:
        type: "string"
        enum:
        - "executed"
        - "rejected"
        - "expired"
      rejectionMessage:
        type: "string"
      fulfillment:
        type: "string"
  Person:
    type: "object"
    required:
    - "identifier"
    - "identifierType"
    properties:
      identifier:
        type: "string"
      identifierType:
        type: "string"
      url:
        type: "string"
      account:
        type: "string"
  Amount:
    type: "object"
    required:
    - "amount"
    - "currency"
    properties:
      amount:
        type: "number"
      currency:
        type: "string"
  TransferType:
    type: "object"
    required:
    - "scenario"
    properties:
      scenario:
        type: "string"
      initiator:
        type: "string"
        enum:
        - "PAYER"
        - "PAYEE"
        - "PROXY"
  HealthStatus:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
  ILPAddress:
    type: "object"
    required:
    - "ilpAddress"
    properties:
      ilpAddress:
        type: "string"
  NotificationRequest:
    type: "object"
    required:
    - "destinationAccount"
    - "ipr"
    - "paymentId"
    - "status"
    properties:
      ipr:
        type: "string"
      paymentId:
        type: "string"
      destinationAccount:
        type: "string"
      status:
        type: "string"
        enum:
        - "prepared"
        - "executed"
      fulfillment:
        type: "string"
  QueryResponse:
    type: "object"
    required:
    - "account"
    - "currencyCode"
    - "currencySymbol"
    - "type"
    properties:
      type:
        type: "string"
        enum:
        - "payee"
        - "invoice"
      account:
        type: "string"
        pattern: "^((http(s?))\\:\\/\\/)?((([a-zA-Z0-9_\\-]{2,}\\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\\\
          d|[01]\\d\\d|\\d?\\d)( ?(\\.?\\d)\\.)){4}))(:[a-zA-Z0-9]+)?(\\/[a-zA-Z0-9\\\
          -\\._\\?\\,\\'\\/\\\\\\+&amp;%\\$#\\=~]*)?$"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      name:
        type: "string"
      imageUrl:
        type: "string"
        pattern: "^((http(s?))\\:\\/\\/)?((([a-zA-Z0-9_\\-]{2,}\\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\\\
          d|[01]\\d\\d|\\d?\\d)( ?(\\.?\\d)\\.)){4}))(:[a-zA-Z0-9]+)?(\\/[a-zA-Z0-9\\\
          -\\._\\?\\,\\'\\/\\\\\\+&amp;%\\$#\\=~]*)?$"
      amount:
        type: "string"
        pattern: "^[-+]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?$"
      status:
        type: "string"
        enum:
        - "paid"
        - "unpaid"
        - "cancelled"
      invoiceInfo:
        type: "string"
  QueryErrorResponse:
    type: "object"
    required:
    - "id"
    - "message"
    properties:
      id:
        type: "string"
      message:
        type: "string"
  GetFetchResponse:
    type: "object"
    required:
    - "account"
    - "currencyCode"
    - "currencySymbol"
    properties:
      name:
        type: "string"
      account:
        type: "string"
      currencySymbol:
        type: "string"
      currencyCode:
        type: "string"
  GetPayeeResponse:
    $ref: "#/definitions/GetFetchResponse"
  FetchErrorResponse:
    type: "object"
    required:
    - "id"
    - "message"
    properties:
      id:
        type: "string"
      message:
        type: "string"
